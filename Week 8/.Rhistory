fit$coefficients
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
ct <- coefTable(x,y)
ct
summary(fit)
summary(fit)[5]
summary(fit)[1]
summary(fit)[2]
summary(fit)[3]
summary(fit)[4]
summary(fit)5
summary(fit)[5]
summary(fit)[6]
summary(fit)[7]
summary(fit)$sigma
summary(fit)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm (y ~ x)
tstats <- coef(fit) / sqrt(diag(vcov(fit)))
2 * pt(abs(tstats), df = df.residual(fit), lower.tail = FALSE)
summary (fit)
summary (fit)
coef (fit)
coef (fit)
summary(fit)$coefficient
summary(fit)$coefficient[,4]
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
summary(fit)$coefficient[2,4] #pick slope, Pr(>|t|)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
fit <- lm (mpg ~ wt, data=mtcars)
#prob_interval <- c(-1, 1) * qt(0.975, df = fit$df)  #use .975 for 95% confidence.  1- 5%/2 ?
confint(fit, 'wt', level=0.95)
c(-1, 1) * qt(0.975, df = fit$df)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
fit <- lm (mpg ~ wt, data=mtcars)
confint(fit, 'wt', level=0.95)
confint.default(fit, 'wt', level=0.95)
fit <- lm (mpg ~ wt, data=mtcars)
#prob_interval <- c(-1, 1) * qt(0.975, df = fit$df)  #use .975 for 95% confidence.  1- 5%/2 ?
d <- data.frame(wt = mean(mtcars$wt))
confint(fit, 'wt', level=0.95) * predict (fit, d, interval="predict")
predict (fit, d, interval="predict")
predict (fit, d, interval="confidence")
predict (fit, d, interval="confidence")
predict (fit, d, interval="confidence")[2]
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
q7_wrong <- function () {
p <- 1:1000
cm <- 2*p + 100 + runif (p, -1, 1)
m <- cm/100
fit_cm <- lm (cm ~ p)
fit_m <- lm (m ~ p)
coef(fit_m)[2]/coef(fit_cm)[2]
}
q7_wrong
q7_wrong()
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
q7()
p <- 1:1000
cm <- 2*p + 100 + runif (p, -1, 1)
m <- cm/100
fit_cm <- lm (cm ~ p)
fit_m <- lm (m ~ p)
c( coef(fit_cm)[2], coef(fit_m)[2])
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
c(cm= coef(fit_cm)[2], m=coef(fit_m)[2])
p <- 1:1000
cm <- 2*p + 100 + runif (p, -1, 1)
m <- cm/100
fit_cm <- lm (p ~ cm)
fit_m <- lm (p ~ m)
c(cm= coef(fit_cm)[2], m=coef(fit_m)[2])
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/Week2.R')
q8()
help(mtcars)
plot (mtcars$mpg)
plot (mtcars$am)
plot (mtcars$mpg[mtcars$am = 0], col=red)
plot (mtcars$mpg[mtcars$am == 0], col=red)
plot (mtcars$mpg[mtcars$am == 0], col="red")
plot (mtcars$mpg[mtcars$am = 0], col=red)
plot (mtcars$mpg[mtcars$am = 1], col=blue)
plot (mtcars$mpg[mtcars$am == 0], col="red")
plot (mtcars$mpg[mtcars$am == 1], col="blue")
plot (mtcars$mpg[mtcars$am == 0], col="red")
points (mtcars$mpg[mtcars$am == 1], col="blue")
help(mtcars)
fitall <- lm(mpg ~ . , data = mtcars)
summary (fitall)
plot(fitall)
fitall <- lm(mpg ~ . , data = mtcars)
summary (fitall)
scatterplotMatrix(mtcars)
library(car)
library("car")
install.packages("car")
library("car")
library(car)
scatterplotMatrix(mtcars)
cor.test (mtcars$mpg, mtcars$am)
cor.test (mtcars$mpg, mtcars$am, mtcars$gear)
cor.test (mtcars$mpg, mtcars$gear)
summary(mtcars)
cor.test (mtcars$mpg, mtcars$mpg)
cor.test (mtcars$mpg, mtcars$mpg+ runif(mtcars$mpg, -1, 1))
?cor.test
cor.test (mtcars$mpg, mtcars[2])
cor.test (mtcars$mpg, mtcars[[2]])
names(mtcars)
names <- names(mtcars[-"mpg"])
names <- names(mtcars[-1])
names <- names(mtcars[-"mpg"])
match ("mpg", names)
names
names <- names(mtcars)
names
match ("mpg", names)
head(mtcars [-1])
cor.test (mtcars$mpg, mtcars$am)
ct <-cor.test (mtcars$mpg, mtcars$am)
ct
str(ct)
ct
names <- names(mtcars)
match ("mpg", names)
ct <- list()
for (i in 1:length(names)-1){
head(mtcars [-1])
t <- cor.test(mtcars$mpg, mtcars[[i]])
ct <- c(ct, t)
}
names <- names(mtcars)
match ("mpg", names)
ct <- list()
i <- 1
mtcars[[i]]
mtcars[[names[i]]]
mtcars[[names[i]]]
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
t
ct <- c(ct, t)
ct
str (ct)
t
t <- cor.test(mtcars$mpg, mtcars[[4])
t <- cor.test(mtcars$mpg, mtcars[[4]])
t
t$cor
t$correlation
str(t)
t$conf.int
str(t)
t
str(t)
t$estimate
str(t)
correlation.test
correlation.test()
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
correlation.test <- function () {
cor.test (mtcars$mpg, mtcars$am)
cor.test (mtcars$mpg, mtcars$cyl, mtcars$gear)
names <- names(mtcars)
match ("mpg", names)
cor <- c()
for (i in 1:length(names)-1){
t <- cor.test(mtcars$mpg, mtcars[[names[i]])
cor <- c(cor, t$estimate)
}
data.frame(names=names, cor = cor)
}
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
correlation.test <- function () {
cor.test (mtcars$mpg, mtcars$am)
cor.test (mtcars$mpg, mtcars$cyl, mtcars$gear)
names <- names(mtcars)
match ("mpg", names)
cor <- c()
for (i in 1:length(names)-1){
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
cor <- c(cor, t$estimate)
}
data.frame(names=names, cor = cor)
}
correlation.test()
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
correlation.test()
names <- names(mtcars)
match ("mpg", names)
cor <- c()
for (i in 1:length(names)-1){
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
cor <- c(cor, t$estimate)
}
data.frame(names=names, cor = cor)
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
mtcars[[names[i]]]
mtcars[[i]]
i
i <- 1
mtcars[[i]]
mtcars[[names[i]]]
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
cor <- c()
for (i in 1:length(names)-1){
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
cor <- c(cor, t$estimate)
}
data.frame(names=names, cor = cor)
i
length(names)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
cor <- c()
for (i in 1:(length(names)-1)){
t <- cor.test(mtcars$mpg, mtcars[[names[i]]])
cor <- c(cor, t$estimate)
}
data.frame(names=names, cor = cor)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
cor <- c()
for (i in 1:(length(names))){
t <- cor.test(mtcars$mpg, mtcars[[i]])
cor <- c(cor, t$estimate)
}
data.frame(names=names, cor = cor)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
sort
names <- names(mtcars)
cor <- c()
for (i in 1:(length(names))){
t <- cor.test(mtcars$mpg, mtcars[[i]])
cor <- c(cor, t$estimate)
}
mpgcor.df <- data.frame(names=names, cor = cor)
mpgcor.df
order (mpgcor.df, cor)
order (mpgcor.df$cor)
mpgcor.df[order (mpgcor.df$cor)]
mpgcor.df[order (mpgcor.df$cor),]
mpgcor.df[order (abs(mpgcor.df$cor),]
mpgcor.df[order (abs(mpgcor.df$cor)]
order (abs(mpgcor.df$cor)
)
mpgcor.df[order (abs(mpgcor.df$cor))]
mpgcor.df[order(abs(mpgcor.df$cor)),]
?order
mpgcor.df[order(abs(mpgcor.df$cor), decreasing=TRUE),]
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
correlation.test()
scatterplotMatrix(mtcars["mpg", "wt", "cyl", "disp", "hp"])
scatterplotMatrix(mtcars[c("mpg", "wt", "cyl", "disp", "hp")])
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
scatterplotMatrix(mtcars[c("mpg", "wt", "cyl", "disp", "hp", "am")])
cor.test(mtcars$mpg, mtcars[[5]])
str(cor.test(mtcars$mpg, mtcars[[5]]))
cor.test(mtcars$mpg, mtcars[[5]])$p.value
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
cor.test(mtcars$mpg, mtcars[[5]])$p.value
correlation.test()
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
scatterplotMatrix(scale(mtcars[c("mpg", "wt", "cyl", "disp", "hp", "am")]))
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
as.data.frame(scale(mtcars))
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
standardised <- as.data.frame(scale(mtcars))
mtcars.pca <- prcomp(standardised)
screeplot(mtcars.pca)
source('C:/Users/Tom/Desktop/MOOC/Coursera Data Science/regressionmodels/CourseProject.R')
screeplot(mtcars.pca, type="lines")
mtcars.pca
swirl()
library(swirl)
library(swirl)
swirl()
fit <- lm (child~parent, data=galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
q
quit()
d
elx <- 1:100
x <- matrix (elx, nrows = 10)
nrow <- length(y)
ncol <- length(y)
k <- 0
for (r in 1:nrow){
for (c in 1:ncol){
el <- c(el, y[r]* y [c] * t(x[r,]) %*% x[c,])
}
}
Vmat <- matrix (el, nrow = nrow, byrow=TRUE)
Vmat2 <- (y*x) %*% (t(y*x))
Vmat3 <- (y*x) %*% (y*t(x))
elx <- 1:100
x <- matrix (elx, nrows = 10)
y <- c(rep(1,5), rep(-1, 5))
nrow <- length(y)
ncol <- length(y)
k <- 0
for (r in 1:nrow){
for (c in 1:ncol){
el <- c(el, y[r]* y [c] * t(x[r,]) %*% x[c,])
}
}
Vmat <- matrix (el, nrow = nrow, byrow=TRUE)
Vmat2 <- (y*x) %*% (t(y*x))
Vmat3 <- (y*x) %*% (y*t(x))
y <- c(rep(1,5), rep(-1, 5))
elx <- 1:100
x <- matrix (elx, nrows = 10)
y <- c(rep(1,5), rep(-1, 5))
x <- matrix (elx, nrow = 10)
y <- c(rep(1,5), rep(-1, 5))
nrow <- length(y)
ncol <- length(y)
k <- 0
for (r in 1:nrow){
for (c in 1:ncol){
el <- c(el, y[r]* y [c] * t(x[r,]) %*% x[c,])
}
}
Vmat <- matrix (el, nrow = nrow, byrow=TRUE)
Vmat2 <- (y*x) %*% (t(y*x))
Vmat3 <- (y*x) %*% (y*t(x))
elx <- 1:100
x <- matrix (elx, nrow = 10)
y <- c(rep(1,5), rep(-1, 5))
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 7/week7.R')
debu
debug (help)
help()
x
y
el
debugSource('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 7/week7.R')
q
q
elx <- 1:100
x <- matrix (elx, nrow = 10)
y <- c(rep(1,5), rep(-1, 5))
el <- c()
nrow <- length(y)
ncol <- length(y)
k <- 0
for (r in 1:nrow){
for (c in 1:ncol){
el <- c(el, y[r]* y [c] * t(x[r,]) %*% x[c,])
}
}
Vmat <- matrix (el, nrow = nrow, byrow=TRUE)
Vmat2 <- (y*x) %*% (t(y*x))
Vmat3 <- (y*x) %*% (y*t(x))
Vmat
Vmat2
Vmat3
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 7/week7.R')
features.train <- read.table("features.train")
names (features.train) <- c("digit", "symmetry", "intensity")
features.test <- read.table("features.test")
names (features.test) <- c("digit", "symmetry", "intensity")
digits <- features.train
plot (digits[,-1],
col = digits[,1])
setwd("C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8")
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
features.train <- read.table("features.train")
names (features.train) <- c("digit", "symmetry", "intensity")
features.test <- read.table("features.test")
names (features.test) <- c("digit", "symmetry", "intensity")
digits <- features.train
plot (digits[,-1],
col = digits[,1])
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex2()
features.train(features.test, 4)
prepOnevAll(features.test, 4)
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
prepOnevAll(features.test, 4)
ex2()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
digits <- prepOnevAll(features.train, 5)
plot (digits[,-1],
col = digits[,1])
summary (prepOnevAll(features.train, 5))
hea(prepOnevAll(features.train, 5))
head(prepOnevAll(features.train, 5))
digits <- prepOnevAll(features.train, 5)
plot (digits,
col = digits$y)
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
digits <- prepOnevAll(features.train, 5)
plot (digits,
col = digits$y+2)
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
plot (digits[-3],
col = digits$y+2)
model <- svm ( y ~ . , data = digits, kernel="polynomial", cost = C,
gamma=1, coef0=1, degree=2, scale=FALSE, type="C-classification")
model <- svm ( y ~ . , data = digits, kernel="polynomial", cost = 0.01,
gamma=1, coef0=1, degree=2, scale=FALSE, type="C-classification")
plot (digits[-3],
col = digits$y+2,
pch = c("o","+")[1:length(digits$y) %in% model$index + 1]))
plot (digits[-3],
col = digits$y+2,
pch = c("o","+")[1:length(digits$y) %in% model$index + 1])
sv <- 1:length(digits$y) %in% model$index + 1
sv
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
plot (digits[-3],
col = digits$y+2+sv)
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
s
sv
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
plot (digits[-3],
col = digits$y+sv)
plot (digits[-3],
col = c("black", "red", "green")[digits$y+sv)]
plot (digits[-3],
col = c("black", "red", "green")[digits$y+sv])
plot (digits[-3],
sv)
sv
plot (digits[-3],
col = c("black", "red", "green")[+sv)]
plot (digits[-3],
col = c("black", "red", "green")[sv]
)
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
features.train <- read.table("features.train")
names (features.train) <- c("digit", "symmetry", "intensity")
OnevFive <- prepOnevFive(features.train)
folds <- createFolds(OnevFive, 10)
?createFolds
??createFolds
library(caret)
library("caret")
install.packages("caret")
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
library(caret)
folds <- createFolds(OnevFive, 10)
folds
folds <- createFolds(OnevFive$y, 10)
folds
str(folds)
str( createFolds(OnevFive$y, 10))
str( createFolds(OnevFive$y, 10))
str( createFolds(OnevFive$y, 10))
str( createFolds(OnevFive$y, 10))
str( createFolds(OnevFive$y, 10))
folds[-4]
unlist(folds[-4])
length (unlist(folds[-4]))
length (unlist(folds[4]))
length (unlist(folds[5]))
length (unlist(folds[6]))
length (unlist(folds[7]))
length (unlist(folds[8]))
length (unlist(folds[1]))
length (unlist(folds[9]))
length (unlist(folds[10]))
str(folds)
length (unlist(folds[10]))
length (unlist(folds[-10]))
length (unlist(folds[-3]))
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
length (unlist(folds[-3]))
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
ex7()
cverr
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
ex7()
source('C:/Users/Tom/Desktop/MOOC/CALTEC Machine learning/machineLearning/Week 8/Week8.R')
